server {
    root /var/www/html/humanroulette/;
    index index.html index.htm;

    server_name humanroulette.net www.humanroulette.net;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location /api/ {
        proxy_pass https://localhost:8080;

        proxy_buffering off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
    }

    location /socket.io/ {
        proxy_pass https://localhost:8080;

        proxy_buffering off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    error_log /var/log/nginx/error.log debug;

    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/humanroulette.net/fullchain.pem; # Замените на путь к сертификату для humanroulette.net
    ssl_certificate_key /etc/letsencrypt/live/humanroulette.net/privkey.pem; # Замените на путь к приватному ключу для humanroulette.net
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.humanroulette.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = humanroulette.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;

    server_name humanroulette.net www.humanroulette.net;
    return 404; # managed by Certbot
}